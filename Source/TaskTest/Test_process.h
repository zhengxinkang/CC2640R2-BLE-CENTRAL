/*
 * Test_process.h
 *
 *  Created on: 2018年8月30日
 *      Author: zheng
 */

#ifndef SOURCE_TASKTEST_TEST_PROCESS_H_
#define SOURCE_TASKTEST_TEST_PROCESS_H_


#include "Test_process.h"
#include "stdbool.h"

typedef enum{
    TEST_PROCESS_STATE_SUCESS           = 0x00,

    TEST_PROCESS_STATE_BAT              = 0x01,
    TEST_PROCESS_STATE_BAT_FAIL              = 0x81,

    TEST_PROCESS_STATE_USB              = 0x02,
    TEST_PROCESS_STATE_USB_FAIL              = 0x82,

    TEST_PROCESS_STATE_UART_ECHO        = 0x03,
    TEST_PROCESS_STATE_UART_ECHO_FAIL        = 0x83,

    TEST_PROCESS_STATE_SET_INFO         = 0x04,
    TEST_PROCESS_STATE_SET_INFO_FAIL         = 0x84,

    TEST_PROCESS_STATE_CHECK_INFO       = 0x05,
    TEST_PROCESS_STATE_CHECK_INFO_FAIL       = 0x85,

    TEST_PROCESS_STATE_SELFCHECK        = 0x06,
    TEST_PROCESS_STATE_SELFCHECK_FAIL        = 0x86,

    TEST_PROCESS_STATE_BLE              = 0x07,
    TEST_PROCESS_STATE_BLE_FAIL              = 0x87,

    TEST_PROCESS_STATE_ZIGBEE           = 0x08,
    TEST_PROCESS_STATE_ZIGBEE_FAIL           = 0x88,

    TEST_PROCESS_STATE_MOTOR_FORWARD    = 0x09,
    TEST_PROCESS_STATE_MOTOR_FORWARD_FAIL    = 0x89,

    TEST_PROCESS_STATE_MOTOR_REVERSAL   = 0x0A,
    TEST_PROCESS_STATE_MOTOR_REVERSAL_FAIL   = 0x8A,

    TEST_PROCESS_STATE_ANTI_LOCK        = 0x0B,
    TEST_PROCESS_STATE_ANTI_LOCK_FAIL        = 0x8B,

    TEST_PROCESS_STATE_PREVENT_DISMANTLE= 0x0C,
    TEST_PROCESS_STATE_PREVENT_DISMANTLE_FAIL= 0x8C,

    TEST_PROCESS_STATE_CARD             = 0x0D,
    TEST_PROCESS_STATE_CARD_FAIL             = 0x8D,

    TEST_PROCESS_STATE_KEYBOARD         = 0xE,
    TEST_PROCESS_STATE_KEYBOARD_FAIL         = 0x8E,

    TEST_PROCESS_STATE_VOICE            = 0x0F,
    TEST_PROCESS_STATE_VOICE_FAIL            = 0x8F,

    TEST_PROCESS_STATE_BUZZ             = 0x10,
    TEST_PROCESS_STATE_BUZZ_FAIL             = 0x90,

    TEST_PROCESS_STATE_LED              = 0x11,
    TEST_PROCESS_STATE_LED_FAIL              = 0x91,

    TEST_PROCESS_STATE_POWER_MAX        = 0x12,
    TEST_PROCESS_STATE_POWER_MAX_FAIL        = 0x92,

    TEST_PROCESS_STATE_POWER_MIN        = 0x13,
    TEST_PROCESS_STATE_POWER_MIN_FAIL        = 0x93,

    TEST_PROCESS_STATE_WRITE_TESTRESULT = 0x14,
    TEST_PROCESS_STATE_WRITE_TESTRESULT_FAIL = 0x94,

    TEST_PROCESS_STATE_READ_TESTRESULT  = 0x15,
    TEST_PROCESS_STATE_READ_TESTRESULT_FAIL  = 0x95,

    TEST_PROCESS_STATE_SETTING_BUTTON   = 0x16,
    TEST_PROCESS_STATE_SETTING_BUTTON_FAIL   = 0x96,

    TEST_PROCESS_STATE_CLEAR_BUTTON     = 0x17,
    TEST_PROCESS_STATE_CLEAR_BUTTON_FAIL     = 0x97,

    TEST_PROCESS_STATE_OBLIQUE_TONGUE   = 0x18,
    TEST_PROCESS_STATE_OBLIQUE_TONGUE_FAIL   = 0x98,

    TEST_PROCESS_STATE_ERASE_EEPROM     = 0x19,
    TEST_PROCESS_STATE_ERASE_EEPROM_FAIL     = 0x99,


    TEST_PROCESS_STATE_FANLE            = 0xf1,     //电流片接反了。
    TEST_PROCESS_STATE_MEIJIEHAO        = 0xf2,     //电流片没接好。
    TEST_PROCESS_STATE_IDLE             = 0xf0,
}TEST_PROCESS_STATE;

TEST_PROCESS_STATE Test_process();
bool IsBusy_testProcess();
void AddBle_process();
void Test_process_setMacAddr(uint8_t* addr);
void Clear_process();
bool Test_process_getStatus();


#endif /* SOURCE_TASKTEST_TEST_PROCESS_H_ */

